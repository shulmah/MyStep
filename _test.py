''' TORT  Входные данные
Первая строка содержит два целых числа 
 r и c (2 ≤ r,c ≤ 10), обозначающих количество строк и количество столбцов в торте. Следующие r строк содержат по c символов — j-ый символ i-ой строки обозначает содержимое ячейки в строке i и столбце j, и имеет одно из следующих значений:
символ '.' обозначает ячейку торта без гадкой клубнички;
символ 'S' обозначает ячейку торта с гадкой клубничкой.

Выходные данные
Выведите максимальное количество ячеек торта, которые может съесть тортминатор '''

'''r,c: 2 3      при условии r,c:== 2 3,
qwertyui    даже если в входн.строках
asdfg         больше букв, блок прог-мы
q w e   # print(matr) # выдает только 
a s d     по 3 буквы в кажд. строку
[Program finished]'''

r,c = map(int, input('r,c: ').split())
matr=[]
for i in range(r): #   input(matr)  #
  matr.append(input())
print(matr)
#  breakpoint() # debugger

ar = []; ac = []
#r, c = 8,9
#matr =[['.', '.', '.', '.', '.', '.', '.', '.', '.'], 
#             ['.', '.', '.', '.', '.', '.', '.', '.', '.'], 
#             ['s', '.', '.', '.', '.', '.', '.', '.', '.'],
#             ['s', '.', '.', '.', '.', '.', '.', '.', '.'],
#             ['s', '.', '.', '.', '.', '.', '.', '.', '.'], 
#             ['s', '.', '.', '.', '.', '.', '.', '.', '.'],
#             ['s', '.', '.', '.', '.', '.', '.', '.', '.'],
#             ['s', '.', '.', '.', '.', '.', '.', '.', '.']]
print(r,'*',c)

for i in range(r):   # сосчитать ск.откр.
    for j in range(c):  # строк и столбов
        if matr[i][j] == 's':
            ar.append(i)
            ac.append(j)
print('ar =', ar)
print('ac =', ac)
print('open arow =', r- len(set(ar)))
print('open column =', c- len(set(ac)))

''' полу-н ответ кол.строк по 'с'-клеток
и кол.столбов по 'r'-клеток. Осталось перемножить, сложить и вычесть''' 

rez= (r- len(set(ar)))*c + (c- len(set(ac)))*r - (c - len(set(ac)))*(r - len(set(ar)))
print('all rezult =', rez)
print()

#  print(matr)  #
for i in range(r): 
  for j in range(c):
    print(matr[i][j], end=' ')
  print()